<?php 
$tableParams = array(
	'tableId' 			=> 'wordpress-dashboard',
    'tableWidth'        => '4',
);
?>

<style><?php echo file_get_contents(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'style.css')?></style>
    
<div>
    
	<div class="left-part">
		<div class="pieChartDiv">
			<canvas id="dashboard-statistics-chart" width="170" height="170" />
			
		</div>
		<div class="pieLegendDiv" id="dashboard-chart-lagend" width="100" height="100" >
			<u>Load Times:</u>
		</div>
	</div>
   
   <div class="dashboardTableDiv tableDiv">
     <?php echo $this->zrayTable($tableParams); //zrayTableHtml ?>
   </div>
        
</div>


<script type="text/javascript">

(function() {
	var queriesCount=false;
	var generalInfoData=false;
	var timeTotal=0;
	var dashboardData=false;
	var storage = zray.getStorage('dashboard');
	// create main table
	var maintable = zray.createGeneralTreeTable(storage, jQuery('#<?php echo $tableParams['tableId']; ?>'));
	maintable.setColumns([
	{
		label: 'Name',
		propertyName: 'name',
		sortable:true,
		attributes: {'class': 'zdb-monospace zdb-ellipsis'},
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			cushion.attr('title', val);
			return cushion.text(val);
		}
	},
	{
		label: 'Value',
		propertyName: 'value',
		sortable:true,
		attributes: {'class': 'zdb-monospace zdb-ellipsis'},
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			cushion.attr('title', val);
			return cushion.text(val);
		}
	}
	]);
	// create main table - end


	zray.registerDataHandler('WordPress', 'generalInfo', function(extensionData, requestData) {
		// collect time from sql queries
		queriesCount=requestData.SqlQueries.length;
		var runTime = requestData.Runtime;
		jQuery.each(runTime, function(key){
			if(key == 'requestId') {
				delete runTime[key];
			}
		});

		var total = jQuery.map(runTime, function (value, key){
			return value;
		}).reduce(function(previousValue, currentValue){
			return previousValue + currentValue;
		});

		timeTotal += total;
	    	// finish collecting time
	    
		generalInfoData=extensionData;
		loadGeneralInfo();
	});

	function loadGeneralInfo(){
		if(!queriesCount||!generalInfoData||zendDevBar.getStorage('functions').getData().length==0||zendDevBar.getStorage('plugins').getData().length==0||zendDevBar.getStorage('theme').getData().length==0){
			return setTimeout(loadGeneralInfo,100);
		}
		
		generalInfoData.push({name:"Queries Count",value:queriesCount});
		
		var colors = [
			{'color': '#F7464A', 'highlight': '#FF5A5E'},
			{'color': '#46BFBD', 'highlight': '#5AD3D1'},
			{'color': '#FDB45C', 'highlight': '#FFC870'},
			{'color': '#949FB1', 'highlight': '#A8B3C5'},
			{'color': '#4D5360', 'highlight': '#616774'},
			{'color': '#b48ead', 'highlight': '#b48eb3'},
			{'color': '#5B90BF', 'highlight': '#5bbabf'}
		];
		var dashboardData = [];
		var pluginsTime = 0;
		jQuery.each(zendDevBar.getStorage('plugins').getData(),function(k,v){
			pluginsTime += v.loadtime;
		});
		dashboardData.push({
			name: 'Plugins',
			loadtime: pluginsTime
		});
		var themeTime = 0;
		jQuery.each(zendDevBar.getStorage('theme').getData(),function(k,v){
			themeTime += v.dInclusive;
		});
		
		dashboardData.push({
			name: 'Theme',
			loadtime: themeTime
		});
		var wpTime = timeTotal/1000;
		var pieData = [];
		var lastKey;
		jQuery.each(dashboardData, function(key, data) {
			lastKey=key;
			wpTime-=data.loadtime;
			pieData.push({
				'label': data.name,
				'value': parseFloat(data.loadtime.toFixed(2)),
				'color': colors[key].color,
				'highlight': colors[key].highlight,
			});
		});
		
		pieData.push({
			'label': 'Core',
			'value': parseFloat(wpTime).toFixed(2)*1,
			'color': colors[++lastKey].color,
			'highlight': colors[lastKey].highlight,
		});
		
		//String - A legend template
		var options = { 
				tooltipTemplate: "<%=label%>: <%=value%>ms",
				legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span class=\"legendColorSpan\" style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
			};
		var ctx = document.getElementById("dashboard-statistics-chart").getContext("2d");
	
		var myPie = new Chart(ctx).Pie(pieData, options);
		var legendText = myPie.generateLegend();
		$zendDevBar('#dashboard-chart-lagend').empty().append(legendText);
		
		storage.setData(generalInfoData);
	}
})();
</script>

