<?php
$tableParams = array(
	'tableId' 			=> 'wordpress-wpquery-tree',
    'tableWidth'        => '4',
);
?>
<style>
#zend-dev-bar .zray-header-btn{
    float: right;
    padding: 3px 8px;
    background: #1471A1;
    color: #fff;
    border-radius: 5px;
    font-size: 11px;
    margin-right: 10px;
    text-decoration: initial !important;
    cursor: pointer;
}
</style>
<div>
<a id="runWPQueryBtn" onclick="runWPQuery();" class="zray-header-btn">Run Custom WP Query</a>
    <div class="wp-group-items">
		<div id="wp_query_query"><strong class="zray_wp_title">SQL Query </strong><span></span></div>
		<div id="wp_query_args"><strong class="zray_wp_title">Query Arguments </strong><span></span></div>
    </div>
	<?php echo $this->zrayTable($tableParams); //zrayTableHtml ?>
        
</div>


<script type="text/javascript">
function runWPQuery(){
    var query = prompt('Please type WP Query here:');
    if(query === null){
        return;
    }
    if(query.trim() == ''){
        alert('Invalid Query');
        return;
    }
    var params = {'query': query};
    zray.runAction('WordPress', 'runWPQuery', params, function(response) {
        try { 
            var jsonResponse = JSON.parse(response);
            if (jsonResponse.success) {
                if (jsonResponse.result) {
                   alert('WP Query loaded successfuly!');
                   if (jsonResponse.result.posts.length == 0) {
                        alert('WP Query return 0 results');
                    }
                }
            } else {
                throw 'Error';
            }
            //$('#wp_query_query>span').html(jsonResponse.result.request);
            jQuery('#wp_query_query span').html(hljs.highlightAuto(jsonResponse.result.request).value);
            jQuery('#wp_query_args span').html(this.query);
            
            var storage = zray.getStorage('wp_query');
            storage.setData(jsonResponse.result.posts);
            
        } catch(e) {
            alert('Can\'t execute query, please try again.');
        }
    }.bind(params));
}
(function() {
	var storage = zray.getStorage('wp_query');
	

	// create main table
	var maintable = zray.createTreeTable(storage, jQuery('#<?php echo $tableParams['tableId']; ?>'));

	
	(function() {
        $('#runWPQueryBtn').appendTo($('[data-name="zrayExtension:WordPress/wp_query"] .zdb-toolbar-detail-header .zdb-col-3-wide'));
		zray.registerDataHandler('WordPress', 'wp_query', function(extensionData, requestData) {
			extensionData=extensionData[0];
			
			if(extensionData['Request']){
				if(window.hljs){
					jQuery('#wp_query_query span').html(hljs.highlightAuto(extensionData['Request']).value);
				}else{
					jQuery('#wp_query_query span').html(extensionData['Request']);
				}			
			}else{
				jQuery('[data-name="zrayExtension:wordpress/wp_query"]').remove();
			}
			if(extensionData['Query']){
				jQuery('#wp_query_args span').html(extensionData['Query']);
			}else{
				jQuery('#wp_query_args').remove();
			}
			if(extensionData['Object']){
				storage.setData(extensionData['Object']);
			}
		});
	})();
})();
</script>

